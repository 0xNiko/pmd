/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */

/* Generated By:JJTree: Do not edit this line. ASTFormalParameter.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY= */

package net.sourceforge.pmd.lang.plsql.ast;

public class ASTFormalParameter extends net.sourceforge.pmd.lang.plsql.ast.AbstractPLSQLNode {

    private boolean in;

    private boolean out;

    private boolean nocopy;

    public boolean isIn() {
        return this.in;
    }

    public void setIn(boolean in) {
        this.in = in;
    }

    public boolean isOut() {
        return this.out;
    }

    public void setOut(boolean out) {
        this.out = out;
    }

    public boolean isNoCopy() {
        return this.nocopy;
    }

    public void setNoCopy(boolean nocopy) {
        this.nocopy = nocopy;
    }

    public ASTFormalParameter(int id) {
        super(id);
    }

    public ASTFormalParameter(PLSQLParser p, int id) {
        super(p, id);
    }

    /** Accept the visitor. **/
    @Override
    public Object jjtAccept(PLSQLParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

    public ASTDatatype getTypeNode() {
        for (int i = 0; i < getNumChildren(); i++) {
            if (getChild(i) instanceof ASTDatatype) {
                return (ASTDatatype) getChild(i);
            }
        }
        throw new IllegalStateException("ASTType not found");
    }
}
/*
 * JavaCC - OriginalChecksum=38c9b79b92b886cd6d4930425644aab3 (do not edit this
 * line)
 */
