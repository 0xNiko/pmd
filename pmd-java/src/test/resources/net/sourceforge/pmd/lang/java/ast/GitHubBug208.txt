+- CompilationUnit[@PackageName = "", @declarationsAreInDefaultPackage = "true"]
   +- ClassOrInterfaceDeclaration[@Abstract = "false", @Annotation = "false", @Anonymous = "false", @BinaryName = "GitHubBug208", @CanonicalName = "GitHubBug208", @Enum = "false", @Image = "GitHubBug208", @Interface = "false", @Local = "false", @Nested = "false", @PackageName = "", @PackagePrivate = "false", @Record = "false", @RegularClass = "true", @SimpleName = "GitHubBug208", @TopLevel = "true", @Visibility = "public"]
      +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
      +- ClassOrInterfaceBody[@Size = "1"]
         +- MethodDeclaration[@Abstract = "false", @Arity = "0", @Image = "testMethod", @MethodName = "testMethod", @Name = "testMethod", @Varargs = "false", @Visibility = "public", @Void = "true"]
            +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
            +- VoidType[@ArrayDepth = "0", @ArrayType = "false", @ClassOrInterfaceType = "false", @PrimitiveType = "false", @TypeImage = "void", @Void = "true"]
            +- FormalParameters[@Size = "0"]
            +- Block[@Size = "1", @containsComment = "false"]
               +- LocalClassStatement[]
                  +- ClassOrInterfaceDeclaration[@Abstract = "false", @Annotation = "false", @Anonymous = "false", @BinaryName = "GitHubBug208$1LocalClass", @CanonicalName = null, @Enum = "false", @Image = "LocalClass", @Interface = "false", @Local = "true", @Nested = "false", @PackageName = "", @PackagePrivate = "false", @Record = "false", @RegularClass = "true", @SimpleName = "LocalClass", @TopLevel = "false", @Visibility = "local"]
                     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
                     |  +- Annotation[@AnnotationName = "Lazy", @SimpleName = "Lazy"]
                     |  |  +- ClassOrInterfaceType[@ArrayDepth = "0", @ArrayType = "false", @ClassOrInterfaceType = "true", @FullyQualified = "false", @PrimitiveType = "false", @ReferenceToClassSameCompilationUnit = "false", @SimpleName = "Lazy", @TypeImage = "Lazy", @Void = "false"]
                     |  +- Annotation[@AnnotationName = "Configuration", @SimpleName = "Configuration"]
                     |     +- ClassOrInterfaceType[@ArrayDepth = "0", @ArrayType = "false", @ClassOrInterfaceType = "true", @FullyQualified = "false", @PrimitiveType = "false", @ReferenceToClassSameCompilationUnit = "false", @SimpleName = "Configuration", @TypeImage = "Configuration", @Void = "false"]
                     +- ClassOrInterfaceBody[@Size = "1"]
                        +- MethodDeclaration[@Abstract = "false", @Arity = "0", @Image = "foo", @MethodName = "foo", @Name = "foo", @Varargs = "false", @Visibility = "package", @Void = "false"]
                           +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
                           |  +- Annotation[@AnnotationName = "Bean", @SimpleName = "Bean"]
                           |     +- ClassOrInterfaceType[@ArrayDepth = "0", @ArrayType = "false", @ClassOrInterfaceType = "true", @FullyQualified = "false", @PrimitiveType = "false", @ReferenceToClassSameCompilationUnit = "false", @SimpleName = "Bean", @TypeImage = "Bean", @Void = "false"]
                           +- ClassOrInterfaceType[@ArrayDepth = "0", @ArrayType = "false", @ClassOrInterfaceType = "true", @FullyQualified = "false", @PrimitiveType = "false", @ReferenceToClassSameCompilationUnit = "false", @SimpleName = "Object", @TypeImage = "Object", @Void = "false"]
                           +- FormalParameters[@Size = "0"]
                           +- Block[@Size = "1", @containsComment = "false"]
                              +- ReturnStatement[]
                                 +- NullLiteral[@BooleanLiteral = "false", @CharLiteral = "false", @CompileTimeConstant = "false", @DoubleLiteral = "false", @Expression = "true", @FloatLiteral = "false", @IntLiteral = "false", @LongLiteral = "false", @NullLiteral = "true", @NumericLiteral = "false", @ParenthesisDepth = "0", @Parenthesized = "false", @StringLiteral = "false"]
