<?xml version="1.0" encoding="UTF-8"?>
<test-data
    xmlns="http://pmd.sourceforge.net/rule-tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

<!--    <test-code>-->
<!--        <description>ok</description>-->
<!--        <expected-problems>0</expected-problems>-->
<!--        <code><![CDATA[-->
<!--public class Foo {-->
<!--    void bar(int b) {-->
<!--        for (int i = 0; i < 10; i++) {-->
<!--            throw new Exception();-->
<!--        }-->
<!--    }-->
<!--}-->
<!--        ]]></code>-->
<!--    </test-code>-->

    <test-code>
        <description>DD anomaly</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>3</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'i' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Foo {
    void bar() {
        int i=0;
        i=1;
        if (i==2) {}
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>DU anomaly</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        int i=0;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>UR anomaly</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        int i;
        if (i == 0) {}
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Conditional flow 0</description>
        <expected-problems>3</expected-problems>
        <expected-linenumbers>3,4,6</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'j' is never used</message>
            <message>The value assigned to variable 'z' is never used</message>
            <message>The value assigned to variable 'j' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Foo {
    void bar(int i) {
        int j = 0;
        int z = 0;
        if (i < 10) {
            j = i;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Conditional flow 1</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>4</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'z' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Foo {
    void bar(int i) {
        int j = 0;
        int z = 0; // unused
        if (i < 10) {
            j = i;
        }
        System.out.println(j);
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Conditional flow 2</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>3</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'j' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Foo {
    void bar(int i) {
        int j = 0; // unused
        int z = 0;
        if (i < 10) {
            j = i;
        } else {
            j = z;
        }
        System.out.println(j);
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Conditional flow with abrupt throw</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>3,6</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'j' is never used</message>
            <message>The value assigned to variable 'j' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Foo {
    void bar(int i) {
        int j = 0; // unused
        int z = 0;
        if (i < 10) {
            j = i; // unused
            throw new Exception();
        } else {
            j = z;
        }
        System.out.println(j);
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Conditional flow with abrupt return</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>3,6</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'j' is never used</message>
            <message>The value assigned to variable 'j' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Foo {
    void bar(int i) {
        int j = 0;  // unused
        int z = 0;
        if (i < 10) {
            j = i;  // unused
            return;
        } else {
            j = z;
        }
        System.out.println(j);
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>#1393 PMD hanging during DataflowAnomalyAnalysis</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>10,19</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'fail' is never used</message>
            <message>The value assigned to variable 'fail' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class LoopTest {
    public static void main(String[] args) {
        int[] a = {1,2,3};
        int[] b = {4,5,6};
        int[] c = {7,8,9};
        for (int i : a) {
            if (i == 0) {
                break;
            } else {
                boolean fail = false;
                for (int j : b) {
                    boolean match = false;
                    for (int k : c) {
                        if (k == 42) {
                            match = true;
                        }
                    }
                    if (!match) {
                        fail = true;
                    }
                }
            }
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>#408 Assert statements causing </description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class AssertTest {
    public void test() {
        final String s = "";
        assert(s != null);

        System.out.println(s);

        final Double d = 9;
        assert(d != null);

        System.out.println(d);

        final String k = "k";
        assert(k != null);

        System.out.println(k);
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>#1905 [java] DataflowAnomalyAnalysis Rule in right order : Case 1. DU-Anomaly(b)</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'b' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        int b = 0 ;
        a = a + b ;
        b = a + b ;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>For loop</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        for(int i = 0 ; i <= 10; i ++){
            a = a+3;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>For loop 2</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>3,5</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'a' is never used</message>
            <message>The value assigned to variable 'a' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        for(int i = 0 ; i <= 10; i ++){
            a = i * 3;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>For loop 3</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        for(int i = 0 ; i <= 10; i ++){
            a = i * 3;
        }
        System.out.println(a);
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>For loop 4</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        for(int i = 0 ; (i + a) <= 10; i ++){
            a = i * 3;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code regressionTest="false">
        <description>#1905 [java] DataflowAnomalyAnalysis Rule in right order : Case 3. DU-Anomaly(a)</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <expected-messages>
            <message>Found 'DU'-anomaly for variable 'a' (lines '5'-'7').</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int[] b = new int[10];
        for(int a : b){
            a = a+3;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>While loop 1</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0;
        int i = 0;
        while(i < 30){
            a = a+3;
            i += 3;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>While loop 2</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>4,7</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'i' is never used</message>
            <message>The value assigned to variable 'i' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0;
        int i = 0; // unused
        while(a < 30){
            a = a + 3;
            i = 5; // unused (kills itself)
        }
    }
}
        ]]></code>
    </test-code>
    <test-code>
        <description>While loop with break</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'i' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0;
        int i = 0;
        while (true) {
            if (a >= 30) {
                i = a + 1; // unused
                break;
            }
            a = a + 3;
            i = i + 1; // used by itself
        }
    }
}
        ]]></code>
    </test-code>
    <test-code>
        <description>While loop without break (control case)</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0;
        int i = 0;
        while (true) {
            if (a >= 30) {
                i = a + 1; // used by below
                // break;  // no break here
            }
            a = a + 3;
            i = i + 1; // used by itself
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>While loop with break 2</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>12</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'i' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0;
        int i = 0; // used now

        outer:
        while (true) {
            a += 2;

            while (true) {
                if (a >= 30) {
                    i = i + 1; // used now
                    break outer;
                }
                a = a + 3;
                i = i + 2; // unused (kills itself)
            }
        }

        System.out.println(i); // uses i = i + 1
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Do while 0</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        int i = 0 ;
        do {
            a = a+3;
            i += 3;
        } while (i < 30);
   }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Do while 1</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>3</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'a' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0;
        int i = 0;
        do {
            a = i+3;
            i += 3;
        } while ((a+i) < 30);
   }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Do while with break</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>7,8</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'i' is never used</message>
            <message>The value assigned to variable 'a' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0;
        int i = 0;
        do {
            if (a >= 20) {
                i = 4;
                a *= 5;
                break;
            }

            a = i + 3;
            i += 3;
        } while (i < 30);
   }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>#1905 [java] DataflowAnomalyAnalysis Rule in right order : Case 6. DU-Anomaly(a)</description>
        <expected-problems>4</expected-problems>
        <expected-linenumbers>6,8,10,12</expected-linenumbers>
        <expected-messages>
            <message>Found 'DU'-anomaly for variable 'a' (lines '6'-'14').</message>
            <message>Found 'DU'-anomaly for variable 'a' (lines '8'-'14').</message>
            <message>Found 'DU'-anomaly for variable 'a' (lines '10'-'14').</message>
            <message>Found 'DU'-anomaly for variable 'a' (lines '12'-'14').</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        int i = 0 ;
        switch(i){
            case 1 : a = a+1;
            break;
            case 2 : a = a+2;
            break;
            case 3 : a = a+3;
            break;
            default : a = a + 0;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>#1905 [java] DataflowAnomalyAnalysis Rule in right order : Case 7. DU-Anomaly(a)</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>9</expected-linenumbers>
        <expected-messages>
            <message>Found 'DU'-anomaly for variable 'a' (lines '9'-'11').</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int a = 0 ;
        int i = 0 ;
        switch(i){
            case 1 : a = a+1;
            case 2 : a = a+2;
            case 3 : a = a+3;
            default : a = a + 0;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Usage as LHS of method</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 't1' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int t1 = 0 ;
        Test2 test = new Test2() ;
        t1 = test.simpleTest(t1) ;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Assignment in operand</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 't1' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int t1 = 0 ;
        int t2 = 0 ;
        Test2 test = new Test2();
        if((t1 = test.simpleTest(t1)) == t2);
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Assignment in operand 2</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 't1' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int t1 = 0 ;
        int t2 = 0 ;
        // the left assignment reaches the right of the ==
        if (   (t1 = t1 + t2)
            == (t1 = t2 * t1) ); // only this assignment is unused
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Assignment in operand 3</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int t1 = 0 ;

        Test2 test = new Test2();
        if( (t1 = test.simpleTest(t1)) == t1);
   }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Assignment in operand 4</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>4,6</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 't2' is never used</message>
            <message>The value assigned to variable 't1' is never used</message>
        </expected-messages>
        <code><![CDATA[
class Test{
    public static void main(String[] args){
        int t1 = 0;
        int t2 = 0;
        Test2 test = new Test2() ;
        if( t1 == (t1 = test.simpleTest(t1))) ;
   }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>#1749 DD False Positive in DataflowAnomalyAnalysis</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>4</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'a' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Test {
    public void test(){
        int a = 0;
        a = a + 3;

        int i = 0;
        i += 3; // same with compound
    }
}
        ]]></code>
    </test-code>
    <test-code>
        <description>Compound assignment</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>4</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'a' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Test {
    public void test(){
        int a = 0;
        a += 3; // same with compound
    }
}
        ]]></code>
    </test-code>
    <test-code>
        <description>Another case</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>3,5</expected-linenumbers>
        <expected-messages>
            <message>The value assigned to variable 'iter' is never used</message>
            <message>The value assigned to variable 'iter' is never used</message>
        </expected-messages>
        <code><![CDATA[
public class Test {
    public void test(){
       ScopeData iter = acceptOpt(node.getBody(), before.fork()); // this assignment is unused
       iter = acceptOpt(node.getCondition(), before.fork());
       iter = acceptOpt(node.getBody(), iter);
    }
}
        ]]></code>
    </test-code>
</test-data>
